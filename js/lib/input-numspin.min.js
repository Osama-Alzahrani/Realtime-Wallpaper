console.log("help");
setTimeout(function() {
     console.log("Good Night!");
     document.querySelectorAll("[data-numspin").forEach((function(t) {
        var e = t.parentNode,
        n = document.createElement("div");
        n.className = "input-group input-numspin-element",
        e.replaceChild(n, t),
        n.appendChild(t);
        t.insertAdjacentHTML("beforebegin", '<button class="btn btn-primary minus-btn" type="button">-</button>');
        var s, a;
        t.insertAdjacentHTML("afterend", '<button class="btn btn-primary plus-btn" type="button">+</button>');
        var i = t;
        if (i.hasAttribute("step") ? step = parseInt(i.getAttribute("step"), 10) : step = 1, s = i.hasAttribute("max") ? parseInt(i.getAttribute("max"), 10) : 99999, a = i.hasAttribute("min") ? parseInt(i.getAttribute("min"), 10) : 0, i.hasAttribute("pattern") || i.setAttribute("pattern", "[0-9]"), i.hasAttribute("data-prefix")) {
            var u = '<span class="input-group-text">' + i.getAttribute("data-prefix") + "</span>";
            t.insertAdjacentHTML("beforebegin", u)
        }
        if (i.hasAttribute("data-suffix")) {
            var r = '<span class="input-group-text">' + i.getAttribute("data-suffix") + "</span>";
            t.insertAdjacentHTML("afterend", r)
        }
        i.hasAttribute("numspin-input-size") && ("sm" == i.getAttribute("numspin-input-size") && n.classList.add("input-group-sm"));
        if (i.hasAttribute("numspin-input-style")) {
            var p = i.getAttribute("numspin-input-style");
            "rounded" == p ? n.classList.add("numspin-input-rounded") : "square" == p && n.classList.add("numspin-input-square")
        }
        if (i.hasAttribute("numspin-input-scheme")) {
            var l = i.getAttribute("numspin-input-scheme");
            "solid" == l ? n.classList.add("numspin-scheme-solid") : "flat" == l ? n.classList.add("numspin-scheme-flat") : "flat-light" == l && n.classList.add("numspin-scheme-flat-light")
        } (new DOMParser).parseFromString(n, "text/html"),
        n.querySelector(".plus-btn").addEventListener("mousedown", (function() {
            var timeout, interval;
            incrementValue(i);

            timeout = setTimeout(function() {
                interval = setInterval(function() {
                  incrementValue(i);
                }, 50);    
            }, 300);

            n.querySelector(".plus-btn").addEventListener('mouseup', clearTimers);
            n.querySelector(".plus-btn").addEventListener('mouseleave', clearTimers); 
            
            function clearTimers() {
              clearTimeout(timeout);
              clearInterval(interval);
            }

            function incrementValue(id) {
                newInputVal = parseInt(id.value, 10) + step,
                newInputVal <= s && (id.value = newInputVal)
            }

        })),
        n.querySelector(".minus-btn").addEventListener("mousedown", (function() {

            var timeout, interval;
            decrementValue(i);

            timeout = setTimeout(function() {
                interval = setInterval(function() {
                  decrementValue(i);
                }, 50);    
            }, 300);

            n.querySelector(".minus-btn").addEventListener('mouseup', clearTimers);
            n.querySelector(".minus-btn").addEventListener('mouseleave', clearTimers); 
            
            function clearTimers() {
              clearTimeout(timeout);
              clearInterval(interval);
            }

            function decrementValue(id) {
                newInputVal = parseInt(id.value, 10) - step,
                newInputVal >= a && (id.value = newInputVal)
            }
        }))
    }));
},
 100);






